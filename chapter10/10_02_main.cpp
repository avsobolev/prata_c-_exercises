/* 10_02_main.cpp
    Занятия по книге Стивена Прата "Язык программирования С++" (2012, 6-е издание).
    Упражнения по программированию. Глава 10, страница 531, упражнение 2

    Пусть имеется определение следующего простого класса:
    class Person {
        private:
            static const LIMIT = 25;
            string lname; // фамилия
            char fname[LIMIT] ; // имя
        public:
            Person () { lname = ""; fname [0] = '\0'; }             // #1
            Person (const string & ln, const char * fn = "Heyyou"); // #2
            // Следующие методы отображают lname и fname
            void Show() const; // формат: имя фамилия
            void FormalShow() const; // формат: фамилия, имя
    };
    
    (В нем используется объект string и символьный массив, так что вы сможете
    сравнить применение этих двух форм.) Напишите программу, которая дополнит
    реализацию за счет предоставления кода для пока еще не определенных 
    методов. В программе, использующей класс, должны также присутствовать вызовы
    трех возможных конструкторов (без аргументов, с одним аргументом, с двумя
    аргументами) и двух методов отображения. Ниже приведен пример применения
    этих конструкторов и методов:
        Person one; // используется конструктор по умолчанию
        Person two("Smythecraft");  // используется конструктор #2
                                    //с одним аргументом по умолчанию
        Person three("Dimwiddy", "Sam");    // используется конструктор #2,
                                            // без аргументов по умолчанию
        one.Show () ;
        cout << endl;
        one.FormalShow();
        // и т.д. для объектов two и three
*/
#include <iostream>
#include "10_02_person.h"

int main () {
    using std::cout;
    using std::endl;
    
    Person one; // используется конструктор по умолчанию
    one.Show () ;
    one.FormalShow();
    cout << endl;

    Person two("Smythecraft");  // используется конструктор #2
                                //с одним аргументом по умолчанию
    two.Show () ;
    two.FormalShow();
    cout << endl;

    Person three("Dimwiddy", "Sam");    // используется конструктор #2,
                                        // без аргументов по умолчанию
    three.Show () ;
    three.FormalShow();
    cout << endl;

    return 0;
} // int main () 